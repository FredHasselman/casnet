% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nlRtsa_SOURCE.R
\name{ts_diff}
\alias{ts_diff}
\title{Derivative of time series}
\usage{
ts_diff(y, order = 1, addColumns = TRUE, keepDerivatives = FALSE,
  maskEdges = NULL, silent = TRUE)
}
\arguments{
\item{y}{A timeseries object or numeric vector or a matrix in which columns are variables and rows are numeric values observed over time.}

\item{order}{How many times should the difference iteration be applied? (default = \code{1})}

\item{addColumns}{Should the derivative(s) be added to the input vector/matrix as columns? (default = \code{TRUE})}

\item{keepDerivatives}{If \code{TRUE} and \code{order > 1}, all derivatives from \code{1:order} will be returned as a matrix )default = \code{FALSE})}

\item{maskEdges}{Mask the values at the edges of the derivatives by any numeric type that is not \code{NULL} (default = \code{NULL})}

\item{silent}{Silent-ish mode}
}
\value{
Depending on the setting of \code{addColumns} and the object type passed as \code{y}, a vector of equal length as \code{y} iteratively differenced by \code{order} times; a matrix with derivatives, or a matrix with original(s) and derivative(s).
}
\description{
Iteratively differenced series up to \code{order}. The same length as the original series is recovered by calculating the mean of two vectors for each iteration: One with a duplicated first value and one with a duplicated last value.
}
\note{
The values at the edges of the derivatives represent endpoint averages and should be excluded from any subsequent analyses. Set argument \code{maskEdges} to a value of your choice.
}
\examples{

# Get an intereting numeric vector from package DescTools
y <- DescTools::Fibonacci(1:26)

# Return the first order derivative as a vector
ts_diff(y=y,addColumns=FALSE)

# Return original and derivative as a matrix
plot(ts_diff(y=y, addColumns=TRUE))

# Works on multivariate data objects with mixed variable types
df <- data.frame(x=letters, y=1:26, z=y)

# Returns only derivatives of the numeric colunmns
ts_diff(y=df,addColumns=FALSE)

# Returns original data with derivatives of the numeric columns
ts_diff(y = df, order=4, addColumns=TRUE)

# Plot logistic S-curve and derivatives 1 to 3
plot(ts(ts_diff(stats::plogis(seq(-5,5,.1)),
order=3, keepDerivatives = TRUE)),  main="ts_derivative")

}
