% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rp.R
\name{rp_size}
\alias{rp_size}
\title{rp_size}
\usage{
rp_size(RM = NULL, dims = NULL, AUTO = NULL, theiler = NULL)
}
\arguments{
\item{RM}{A Matrix object}

\item{dims}{Two element vector representing the dimensions of Matrix \code{RM}. If \code{dims} is provided, the Matrix does not have to be passed as an argument (default = \code{NA})}

\item{AUTO}{Is the Matrix an Auto Recurrence Matrix? If so, the length of the diagonal will be subtracted from the matrix size, pass \code{FALSE} to prevent this behaviour. If \code{NULL} (default) \code{AUTO} will take on the value of \code{isSymmetric(RM)}.}

\item{theiler}{Should a Theiler window be applied?}
}
\value{
Matrix size for computation of recurrence measures.
}
\description{
Calculate the maximum possible number of recurrent points in a recurrence matrix.
}
\details{
This function can take into account the presence of a \code{theiler} window, that is the points in the window will be excluded from the calculation. For example, some scholars will exclude the main diagonal from the calculation of the recurrence rate.
}
\examples{
# Create a 10 by 10 matrix
library(Matrix)
m <- Matrix(rnorm(10),10,10)

rp_size(RM = m, AUTO = TRUE, theiler = 0)  # Subtract diagonal
rp_size(RM = m, AUTO = FALSE,theiler = 0)  # Do not subtract diagonal
rp_size(RM = m, AUTO = NULL, theiler = 0)  # Matrix is symmetrical, AUTO is set to TRUE
rp_size(RM = m, AUTO = NULL, theiler = 1)  # Subtract a Theiler window of 1 around and including the diagonal

# Calculate without a matrix
rp_size(dims = c(10,10), AUTO = TRUE, TRUE,0)
rp_size(dims = c(10,10), AUTO = FALSE,FALSE,0)

}
\seealso{
Other Distance matrix operations (recurrence plot): 
\code{\link{bandReplace}()},
\code{\link{createCorridor}()},
\code{\link{mat_di2bi}()},
\code{\link{mat_di2ch}()},
\code{\link{mat_di2we}()},
\code{\link{mat_hamming}()},
\code{\link{rp_lineDist}()},
\code{\link{rp_nzdiags}()},
\code{\link{rp_plot}()},
\code{\link{rp}()}
}
\concept{Distance matrix operations (recurrence plot)}
