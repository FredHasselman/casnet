% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mrn.R
\name{mrn_plot}
\alias{mrn_plot}
\title{Mutliplex Recurrence Network Plot}
\usage{
mrn_plot(
  layers = NA,
  MRN = NA,
  MRNweightedBy = c("InterLayerMI", "EdgeOverlap")[1],
  win = NA,
  step = NA,
  overlap = NA,
  alignment = "r",
  cumulative = FALSE,
  doPlot = TRUE,
  doSave = FALSE,
  coords = NA,
  RNnodes = FALSE,
  vertexSizeBy = "degree",
  scaleVertexSize = c(0.01, 5),
  vertexColour = NA,
  vertexBorderColour = "black",
  showVertexLegend = TRUE,
  showSizeLegend = FALSE,
  alphaV = 0.7,
  scaleEdgeSize = 1/5,
  alphaE = 0.5,
  showEdgeColourLegend = FALSE,
  curvature = -0.2,
  createAnimation = FALSE,
  useImageMagick = FALSE,
  loopAnimation = TRUE,
  transitionLength = 3,
  stateLength = 1,
  gifWidth = 600,
  gifRes = 150,
  noParts = TRUE,
  imageDir = NA,
  silent = TRUE
)
}
\arguments{
\item{layers}{A list of igraph objects representing the layers of the multiplex network. The layer networks must all have the same number of vertices.}

\item{MRN}{The output from function \code{\link[=mrn]{mrn()}}}

\item{MRNweightedBy}{The measure to be used to evaluate the average structural similarities between the layers of the network. Valid options are: \code{"InterLayerMI"} (Mutual information based on similarity of the vertex degree across layers), \code{"EdgeOverlap"} (proportion of vertices sharing the same edges across layers). Choosing \code{"InterLayerMI"} or \code{"EdgeOverlap"} will decide which measure is displayed in the plot of the Multiplex RN, both measures will always be returned in the numerical output.}

\item{win}{The window size passed to \code{\link[=ts_windower]{ts_windower()}} in which to evaluate \code{"InterLayerMI"}, \code{"InterLayerCor"}, or \code{"EdgeOvelap"}. (default = \code{NA}).}

\item{step}{The stepsize for the sliding window (default = \code{NA}).}

\item{overlap}{The window overlap passed to \code{\link[=ts_windower]{ts_windower()}} if \code{MRNweightedBy} is \code{"InterLayerMI"} or \code{"EdgeOvelap"}. The value of \code{step} will be ignored if \code{overlap} is not \code{NA}. (default = \code{NA}).}

\item{alignment}{Whether to right (\code{"r"}), center (\code{"c"}), or left (\code{"l"}) align the window.}

\item{cumulative}{To make the network represent cumulative time, set \code{directed = TRUE} and \code{cumulative = TRUE}. This will set the upper triangle of the recurrence matrix to \code{0} and ensures that the network edges represent recurrent values that have occurred in the \code{past} relative to the current observed value (node). If \code{directed = FALSE} the argument is ignored (default = \code{TRUE}).}

\item{doPlot}{Plot the multiplex recurrence network (default = \code{TRUE}).}

\item{doSave}{Save the plots.}

\item{coords}{A data frame with layout coordinastes generated by calling any of the \link{igraph} layout functions. If \code{NA} a circle layout will; be generated (default = \code{NA})}

\item{RNnodes}{Should the vertices of the MRN represent a plot of the RN of the layers? This is recommended only for a small numbers of vertices. (default = `FALSE``)}

\item{vertexSizeBy}{A valid \link{igraph} function that calculates node based measures, or a numeric constant. (default = \code{"degree"})}

\item{scaleVertexSize}{Scale the size of the vertices by setting a range for \code{\link[ggplot2:scale_size]{ggplot2::scale_size()}}. This will not affect the numbers on the size legend (default = \code{c(1,6)})}

\item{vertexColour}{A vector of colours for the vertices. If this is a named list, names will be displayed in the legend.}

\item{vertexBorderColour}{Draw a border around the vertices. Pass \code{NULL} to use the same colour as the fill colour (default = \code{"black"})}

\item{showVertexLegend}{Show the vertex colour legend?}

\item{showSizeLegend}{Should a legend be shown for the size of the nodes? (default = \code{FALSE})}

\item{alphaV}{Set transparency for Vertices (default = \code{1})}

\item{scaleEdgeSize}{Scale the size of the edges by a constant: \code{E(g)$width * scaleEdgeSize} (default = \code{1/5})}

\item{alphaE}{Set transparency for Edges. A single numeric, or a vector of length \code{ecount(g)} (default = \code{0.8})}

\item{showEdgeColourLegend}{Should a legend be shown for the colour of the edges? (default = \code{FALSE})}

\item{curvature}{The \code{curvature} parameter for edges see \code{\link[=geom_curve]{geom_curve()}} (default = \code{-0.7})}

\item{createAnimation}{If \code{createAnimation = TRUE} \emph{and} \code{doPlot = TRUE} \emph{and} a windowed analysis is conducted, an animation will be produced using either package \code{gganimate} (if \code{useImageMagick = FALSE}) or \code{animation} (if \code{useImageMagick = TRUE}). The main difference is that \code{gganimate} has nice animation transition features, but plots the MRN using \link{ggplot2}, which does not have great options for displaying the nodes as images. With package \code{animation} a sequence of \link{igraph} plots will be converted to an animation. If \code{doSave = TRUE} the animation will be saved in \code{imageDir} as an animated gif by calling either \code{\link[gganimate:anim_save]{gganimate::anim_save()}}, or \code{\link[animation:saveGIF]{animation::saveGIF()}} (default = \code{FALSE})}

\item{useImageMagick}{Should \href{https://imagemagick.org/index.php}{ImageMagick} be used to create the animation. \strong{NOTE:} ImageMagick has to be installed on your system, see \code{\link[animation:saveGIF]{animation::saveGIF()}} (default = \code{FALSE})}

\item{loopAnimation}{Should the animation loop? (default = \code{TRUE})`}

\item{transitionLength}{Length of each transition in the animation, ignored if \code{useImageMagick = TRUE} (default = \code{3})}

\item{stateLength}{Value of \code{state_length} if \code{gganimate} is used, or the  \code{interval} in seconds for \code{\link[animation:ani.pause]{animation::ani.pause()}} (default = \code{1})}

\item{gifWidth}{Width of the animated \code{gif} in pixels. The default width will be \verb{600/150 = 4 in} or \verb{10.16 cm} (default = \code{600})}

\item{gifRes}{Resolution of the animated \code{gif} in \code{ppi} (default =\code{150})}

\item{noParts}{Do not plot the individual graphs that make up the animation to the current \code{dev} (default = \code{TRUE})}

\item{imageDir}{Directory to save the layer images and windowed MRN plots. If \code{NA}, the value returned by \code{getwd()} will be used, if \code{NULL} no windowed images will be saved (default = \code{NA})}

\item{silent}{Silent-ish mode}
}
\value{
A matrix with edge weights between layers that represent the measure \code{MRNweightedBy}.
}
\description{
This function will plot a Multiplex Recurrence Network from a list of \link{igraph} objects that can be considered the layers of a network. or based on the output of function \code{\link[=mrn]{mrn()}}. The layers must have the same number of nodes.
}
\examples{

#' # Create some layers
library(igraph)

layers <- list(g1 = igraph::sample_smallworld(1, 100, 5, 0.05),
g2 = igraph::sample_smallworld(1, 100, 5, 0.5),
g3 = igraph::sample_smallworld(1, 100, 5, 1))

mrn_plot(layers = layers,showEdgeColourLegend=TRUE)

}
