% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{noise_powerlaw}
\alias{noise_powerlaw}
\title{Generate noise series with power law scaling exponent}
\usage{
noise_powerlaw(
  y = NULL,
  alpha = -1,
  N = 512,
  standardise = FALSE,
  randomPower = FALSE,
  seed = NA
)
}
\arguments{
\item{y}{Time series to use as a 'model'. If specified, \code{N} will be \code{N = length(y)}, and the series will be constructed based on \code{stats::fft(y)}.}

\item{alpha}{The log-log spectral slope, the scaling exponent. Use \code{0} for white noise, negative numbers for anti-persistant noises: \code{-1} for \eqn{\frac{1}{f}} noise, positive numbers for persistent noises, e.g. \code{1} for blue noise.}

\item{N}{Length of the time series}

\item{standardise}{Forces scaling of the output to the range \verb{[-1, 1]}, consequently the power law will not necessarily extend right down to \verb{0Hz}.}

\item{randomPower}{If \code{TRUE} phases will be deterministic, uniformly distributed in \verb{[-pi,pi]}. If \code{FALSE}, the spectrum will be stochastic with a Chi-square distribution. If \code{y} is not \code{NULL} this argument will be ignored.}

\item{seed}{Provide an integer number to set the seed for the random number generator in order to get reproducible results. If \code{NA} (default) no user defined seed will be set,}
}
\value{
Time series with a power law of alpha.
}
\description{
Generate noise series with power law scaling exponent
}
\note{
This R code was adapted from a Matlab script called \code{powernoise.m} by Max Little. The script contained the following commented text:

With no option strings specified, the power spectrum is
}
