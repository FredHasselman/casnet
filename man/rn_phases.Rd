% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rn.R
\name{rn_phases}
\alias{rn_phases}
\title{Extract Phases from weighted RN}
\usage{
rn_phases(
  RN,
  maxPhases = 5,
  minStatesinPhase = 1,
  maxStatesinPhase = NROW(RN),
  inverseWeight = TRUE,
  cleanUp = TRUE,
  returnCentroid = c("no", "mean.sd", "median.mad", "centroid")[1],
  removeSingularities = FALSE,
  standardise = c("none", "mean.sd", "median.mad", "unit")[4],
  returnGraph = FALSE,
  doPhaseProfilePlot = FALSE,
  plotCentroid = FALSE,
  space_dims = NULL,
  colOrder = FALSE,
  phaseColours = NULL,
  doSpiralPlot = FALSE,
  doPhaseSeriesPlot = FALSE,
  showEpochLegend = TRUE,
  epochColours = NULL,
  epochLabel = "Phase",
  excludeOther = FALSE,
  excludeNorec = TRUE
)
}
\arguments{
\item{RN}{A matrix produced by the function \link{rn}}

\item{maxPhases}{The maximum number of phases to extract. If \code{NA}, the value will be set to \code{NROW(RN)}  (default = \code{5})}

\item{minStatesinPhase}{A parameter applied after the extraction of phases (limited by \code{maxPhases}). If any extracted phases do not have a minimum number of \code{minStatesinPhase} + \code{1} (= the state that was selected based on node strength), the phase will be removed from the result (default = \code{1})}

\item{maxStatesinPhase}{A parameter applied after the extraction of phases (limited by \code{maxPhases}). If any extracted phases exceeds a maximum number of \code{maxStatesinPhase} + \code{1} (= the state that was selected based on node strength), the phase will be removed from the result (default = \code{NROW(RN)})}

\item{inverseWeight}{Whether to perform the operation \code{1/weight} on the edge weights. The default is \code{TRUE}, if the matrix was weighted by a distance metric (\code{weightedBy = "si"}) edges with smaller distances (recurring coordinates closer to the current coordinate) have greater impact on the node strength calculation used to select the phases. If the matrix was weighted by recurrence time (\code{weightedBy = "rt"}) and \code{inverseWeight = TRUE}, recurrent points with shorter recurrence times will have greater impact on the strength calculation. If \code{weightedBy = "rf"}, lower frequencies will end up having more impact. (default = \code{TRUE})}

\item{cleanUp}{Try to assign states to phases that were not assigned by the algorithm. If \code{FALSE}, these states will be added to category "Other" (default = \code{TRUE})}

\item{returnCentroid}{Values can be \code{"no"}, \code{"mean.sd"}, \code{"median.mad"}, \code{"centroid"}. Any other value than \code{"no"} will return a data frame with the central tendency and deviation measures for each phase (default = \code{"no"})}

\item{removeSingularities}{Will remove states that recur only once (nodes with \code{degree(g) == 1}) (default = \code{FALSE})}

\item{standardise}{Standardise the series using \code{\link[=ts_standardise]{ts_standardise()}} with \code{adjustN = FALSE} (default = "mean.sd")}

\item{returnGraph}{Returns all the graph object objects of the plots that have been produced (default = \code{FALSE})}

\item{doPhaseProfilePlot}{Produce a profile plot of the extracted phases (default = \code{TRUE})}

\item{plotCentroid}{Plot the centroid requested in \code{returnCentroid}? (default = \code{FALSE})}

\item{space_dims}{A vector of titles to use for the dimensions. If \code{NULL} the values will be read from the attribute of \code{RN}.}

\item{colOrder}{Should the order of the dimensions reflect the order of the columns in the dataset? If \code{FALSE} the order will be based on the values of the dimensions observed in the first extracted phase (default = \code{FALSE})}

\item{phaseColours}{Colours for the different phases in the phase plot. If \code{epochColours} also has a value, \code{phaseColours} will be used instead (default = \code{NULL})}

\item{doSpiralPlot}{Produce a plot of the recurrence network with the nodes coloured by phases (default = \code{FALSE})}

\item{doPhaseSeriesPlot}{Produce a time series of the phases as they occur with a marginal histogram of their frequency (default = \code{FALSE})}

\item{showEpochLegend}{Should a legend be shown for the epoch colours? (default = \code{TRUE})}

\item{epochColours}{A vector of length \code{vcount(g)} with colour codes (default = \code{NULL})}

\item{epochLabel}{A title for the epoch legend (default = \code{"Epoch"})}

\item{excludeOther}{Should the phase "Other" be excluded from plots? (default = \code{FALSE})}

\item{excludeNorec}{Should the category "No recurrence" be excluded from plots? (default = \code{TRUE})}
}
\value{
A data frame with information about the phases or a list object with data and graph objects (if requested).
}
\description{
This function will extract phases (regions of attraction in phase space) based on a weighted \code{RN} object created with function \link{rn}.
The assumption is that coordinates in state space that are either close in terms of distance, or are re-visited with short recurrence times,
or with high-frequency, are regions of attraction for the system.
}
\details{
The method used for the identification of phases is on the properties of the \code{RN} object:
\itemize{
\item If weighted by distance \code{"si"}, the inverse distance will be used, which means higher weights correspond to closer states.
\item If weighted by recurrence time \code{"rt"}, the inverse time will be used, which means higher weights correspond to faster recurrence times.
}

The procedure is as follows:
\enumerate{
\item Identify the node with the highest strength
\item Identify the nodes that connect to this node
\item Identify the node with highest strength that does not connect to the node identified in step 1.
\item Repeat until criteria set in \code{maxPhases}, \code{minStatesinPhase} and \code{maxStatesinPhase} are triggered.
\item Clean up. If \code{cleanUp = TRUE} the remaining states that connect to nodes of one of the identified phases, but not to the node with highest strength identified in step 1 will be added to that phase. Otherwise these nodes will end up in category "Other".
}
}
\examples{

# Use the ManyAnalysts dataset to create a phase plot with default settings
data("manyAnalystsESM")
df <- manyAnalystsESM[4:10]
RN <- rn(y1 = df, doEmbed = FALSE, weighted = TRUE, weightedBy = "si", emRad = NA)

# This returns 6 phases which have minimally 1 state
rn_phases(RN, maxPhases = 10, doPhaseProfilePlot = TRUE)

# Use min. number of states as the extraction criterion
rn_phases(RN, maxPhases = NA, minStatesinPhase = 7, doPhaseProfilePlot = TRUE)

}
\seealso{
Other Distance matrix operations (recurrence network): 
\code{\link{mat_di2bi}()},
\code{\link{mat_di2ch}()},
\code{\link{mat_di2we}()},
\code{\link{rn}()},
\code{\link{rn_plot}()},
\code{\link{rn_recSpec}()}
}
\concept{Distance matrix operations (recurrence network)}
