% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotFUN.R
\name{getColours}
\alias{getColours}
\title{Get some nice colours}
\usage{
getColours(Ncols, continuous = FALSE, Dcols = c(0, 1))
}
\arguments{
\item{Ncols}{Either an integer representing the number of requested colours, or, a numeric vector of integers between 1-58 to select specific colours. Run \code{\link[=getColours]{getColours()}} without arguments to see a plot of the colours that are available.}

\item{continuous}{Return a discrete vector of colours, or, a function that represents a gradient between 2 or more colours? If \code{TRUE} then argument \code{Ncols} must be a numeric vector greater than length \code{2}. \strong{NOTE:} The input to the gradient function must be (re-)scaled to fall between 0 and 1, e.g. using \code{\link[=elascer]{elascer()}}. (default = \code{FALSE})}

\item{Dcols}{If \code{continuous} is set to \code{TRUE}, this should be a vector of the same length as \code{Ncols} representing the relative distances between the colours in the gradient function using values between 0 and 1. (default = \code{c(0,1)})}
}
\value{
A list of colours
}
\description{
Get some nice colours
}
\examples{

# This will plot all available colours with their numbers
getColours()

# Get a specific number of colours
getColours(5)

# Get specific colours
getColours(c(4,7,1,40))

# Make a gradient from colour number 4 to 44 via 7
gradFunc <- getColours(Ncols = c(4,7,44), continuous = TRUE, Dcols = c(0,.5,1))

df <- data.frame(x=1:50, y=sort(rnorm(50)))
# Make sure the input is on a scale of 0-1
df$ycol <- elascer(df$y)

library(ggplot2)
ggplot(df, aes(x=x,y=y,colour=ycol)) +
geom_point() +
scale_colour_gradientn("Gradient",colours = gradFunc(df$ycol)) +
theme_bw()

# Make a gradient from colour number 4, to 9, to 7, to 36, to 44
gradFunc <- getColours(Ncols = c(4,9,7,36,44), continuous = TRUE, Dcols = c(0,.33,.5,.66,1))

ggplot(df, aes(x=x,y=y,colour=ycol)) +
geom_point() +
scale_colour_gradientn("Gradient",colours = gradFunc(df$ycol)) +
theme_bw()

}
