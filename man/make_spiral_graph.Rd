% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotFUN.R
\name{make_spiral_graph}
\alias{make_spiral_graph}
\title{Make Spiral Graph}
\usage{
make_spiral_graph(
  g,
  type = "Archimedean",
  arcs = 6,
  a = 1,
  b = NULL,
  rev = FALSE,
  curvature = -0.6,
  angle = 90,
  markTimeBy = NULL,
  labelSize = 3,
  alphaV = 1,
  alphaE = 0.6,
  showArrows = FALSE,
  title = "",
  subtitle = "",
  showEpochLegend = TRUE,
  markEpochsBy = NULL,
  epochColours = NULL,
  epochLabel = "Epoch",
  showSizeLegend = FALSE,
  sizeLabel = "Size",
  scaleVertexSize = c(1, 6),
  vertexBorderColour = "black",
  scaleEdgeSize = 1/5,
  edgeColourLabel = "Weight",
  showEdgeColourLegend = FALSE,
  edgeColourByEpoch = TRUE,
  defaultEdgeColour = "grey70",
  doPlot = TRUE
)
}
\arguments{
\item{g}{An igraph object. If (\code{rev = FALSE}) the vertex with the lowest index will be placed in the centre of the spiral, the highest index will be most outer vertex,}

\item{type}{Spiral type, one of \code{"Archimedean"},\code{"Bernoulli"},\code{"Fermat"}, or, \code{"Euler"} (default = \code{"Archimedean"})}

\item{arcs}{The number of arcs (half circles/ovals) that make up the spiral (default = \code{10})}

\item{a}{Parameter controlling the distance between spiral arms, however, the effect will vary for different spiral types (default = \code{0.5})}

\item{b}{Parameter controlling where the spiral originates. A value of 1 will generally place the origin in the center. The default \code{NULL} will choose a value based on the different spiral types (default = \code{NULL})}

\item{rev}{If \code{TRUE} the vertex with the highest index will be placed in the centre of the spiral (default = \code{FALSE})}

\item{curvature}{The \code{curvature} parameter for edges see \code{\link[=geom_curve]{geom_curve()}} (default = \code{-0.7})}

\item{angle}{The \code{angle} parameter for edges see \code{\link[=geom_curve]{geom_curve()}} (default = \code{90})}

\item{markTimeBy}{Include a vector that indicates time. The time will be displayed on the plot. Pass \code{TRUE} to generate auto labels (experimental)}

\item{labelSize}{The size of text in the annotation labels (default = \code{3})}

\item{alphaV}{Set transparency for Vertices (default = \code{1})}

\item{alphaE}{Set transparency for Edges. A single numeric, or a vector of length \code{ecount(g)} (default = \code{0.8})}

\item{showArrows}{Show arrows at the end of the edges? (default = \code{FALSE})}

\item{title}{A title for the plot}

\item{subtitle}{A subtitle for the plot}

\item{showEpochLegend}{Should a legend be shown for the epoch colours? (default = \code{TRUE})}

\item{markEpochsBy}{A vector of length \code{vcount(g)} indicating epochs or groups (default = \code{NULL})}

\item{epochColours}{A vector of length \code{vcount(g)} with colour codes (default = \code{NULL})}

\item{epochLabel}{A title for the epoch legend (default = \code{"Epoch"})}

\item{showSizeLegend}{Should a legend be shown for the size of the nodes? (default = \code{FALSE})}

\item{sizeLabel}{Guide label, use it to indicate if \code{V(g)$size} represents some measure, e.g. \code{\link[igraph:degree]{igraph::degree()}}, or, \code{\link[igraph:hub_score]{igraph::hub_score()}}, \code{\link[igraph:strength]{igraph::strength()}} (default = \code{"Size"})}

\item{scaleVertexSize}{Scale the size of the vertices by setting a range for \code{\link[ggplot2:scale_size]{ggplot2::scale_size()}}. This will not affect the numbers on the size legend (default = \code{c(1,6)})}

\item{vertexBorderColour}{Draw a border around the vertices. Pass \code{NULL} to use the same colour as the fill colour (default = \code{"black"})}

\item{scaleEdgeSize}{Scale the size of the edges by a constant: \code{E(g)$width * scaleEdgeSize} (default = \code{1/5})}

\item{edgeColourLabel}{Use to indicate if \code{E(g)$color} represents color coding based on some property. (default = \code{"Weight"})}

\item{showEdgeColourLegend}{Should a legend be shown for the colour of the edges? (default = \code{FALSE})}

\item{edgeColourByEpoch}{Should edges that connect to the same epoch be assigned the epoch colour? This will ignore edge colour info in \code{E(g)$color}. (default = \code{TRUE})}

\item{defaultEdgeColour}{Colour of edges that do not connect to the same epoch (default = \code{"grey70"})}

\item{doPlot}{Produce a plot? (default = \code{TRUE})}
}
\value{
A ggplot object.
}
\description{
Turn an \link{igraph} object into a spiral graph returning a \link{ggplot2} object.
}
\note{
To keep the igraph object, use the layout function \code{\link[=layout_as_spiral]{layout_as_spiral()}} when plotting the graph.
}
\examples{

library(igraph)

g  <- igraph::sample_gnp(200, 1/20)
V(g)$size <- degree(g)
make_spiral_graph(g, markTimeBy = TRUE, showSizeLegend = TRUE, sizeLabel = "Node degree")

}
