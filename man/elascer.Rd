% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nlRtsa_SOURCE.R, R/nlRtsa_SOURCE.old.R
\name{elascer}
\alias{elascer}
\alias{elascer}
\title{elascer}
\usage{
elascer(x, mn = min(x, na.rm = T), mx = max(x, na.rm = T), lo = 0,
  hi = 1)

elascer(x, mn = min(x, na.rm = T), mx = max(x, na.rm = T), lo = 0,
  hi = 1)
}
\arguments{
\item{x}{Input vector or data frame.}

\item{mn}{Minimum value of original, defaults to \code{min(x, na.rm = TRUE)}.}

\item{mx}{Maximum value of original, defaults to \code{max(x, na.rm = TRUE)}.}

\item{lo}{Maximum value to rescale to, defaults to \code{1}.}

\item{hi}{Minimum value to rescale to, defaults to \code{0}.}

\item{x}{Input vector or data frame.}

\item{mn}{Minimum value of original, defaults to \code{min(x, na.rm = TRUE)}.}

\item{mx}{Maximum value of original, defaults to \code{max(x, na.rm = TRUE)}.}

\item{hi}{Minimum value to rescale to, defaults to \code{0}.}

\item{lo}{Maximum value to rescale to, defaults to \code{1}.}
}
\value{
scaled inout

scaled inout
}
\description{
The 'elastic scaler'will rescale numeric vectors (1D, or columns in a matrix or data.frame) to a user defined minimum and maximum, either based on the extrema in the data, or, a minimum and maximum defined by the user.

The 'elastic scaler'will rescale numeric vectors (1D, or columns in a matrix or data.frame) to a user defined minimum and maximum, either based on the extrema in the data, or, a minimum and maximum defined by the user.
}
\details{
Three uses:
\enumerate{
\item elascer(x)             - Scale x to data range: min(x.out)==0;      max(x.out)==1
\item elascer(x,mn,mx)       - Scale x to arg. range: min(x.out)==mn==0;  max(x.out)==mx==1
\item elascer(x,mn,mx,lo,hi) - Scale x to arg. range: min(x.out)==mn==lo; max(x.out)==mx==hi
}

Three uses:
\enumerate{
\item elascer(x)             - Scale x to data range: min(x.out)==0;      max(x.out)==1
\item elascer(x,mn,mx)       - Scale x to arg. range: min(x.out)==mn==0;  max(x.out)==mx==1
\item elascer(x,mn,mx,lo,hi) - Scale x to arg. range: min(x.out)==mn==lo; max(x.out)==mx==hi
}
}
\examples{
# Works on numeric objects
somenumbers <- cbind(c(-5,100,sqrt(2)),c(exp(1),0,-pi))

elascer(somenumbers)
elascer(somenumbers,mn=-100)
# Values < mn will return < lo (default=0)
# Values > mx will return > hi (default=1)
elascer(somenumbers,mn=-1,mx=99)

elascer(somenumbers,lo=-1,hi=1)
elascer(somenumbers,mn=-10,mx=101,lo=-1,hi=4)
# Works on numeric objects
somenumbers <- cbind(c(-5,100,sqrt(2)),c(exp(1),0,-pi))

elascer(somenumbers)
elascer(somenumbers,mn=-100)
# Values < mn will return < lo (default=0)
# Values > mx will return > hi (default=1)
elascer(somenumbers,mn=-1,mx=99)

elascer(somenumbers,lo=-1,hi=1)
elascer(somenumbers,mn=-10,mx=101,lo=-1,hi=4)
}
